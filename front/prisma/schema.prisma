// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  name String
  comments Comment[]
  posts Post[] @relation("OwnPosts")
  tempPosts TempPost[]
  subscribedPosts Post[] @relation("OwnSubscribedPosts")
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
}

model Post {
  id Int @id @default(autoincrement())
  title String
  content String @db.LongText
  htmlContent String @db.LongText
  tags Tag[] @relation("PostsAndTags")
  comments Comment[]
  likeCount Int @default(0)
  category Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?
  author User? @relation("OwnPosts", fields: [authorId], references: [id])
  authorId Int?
  subscriber User[] @relation("OwnSubscribedPosts")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TempPost {
  id Int @id @default(autoincrement())
  title String
  content String @db.LongText
  htmlContent String @db.LongText
  tags Tag[] @relation("TempPostsAndTags")
  category Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?
  author User? @relation(fields: [authorId], references: [id])
  authorId Int?
  createdAt DateTime @default(now())
}

model Tag {
  id Int @id @default(autoincrement())
  name String @unique
  posts Post[] @relation("PostsAndTags")
  tempPosts TempPost[] @relation("TempPostsAndTags")
}

model Category {
  id Int @id @default(autoincrement())
  name String @unique
  posts Post[]
  tempPosts TempPost[]
}

model Comment {
  id Int @id @default(autoincrement())
  post Post @relation(fields: [postId], references: [id])
  postId Int
  author User @relation(fields: [authorId], references: [id])
  authorId Int
  content String
  datetime DateTime @default(now())
}